basePath: /
definitions:
  datastruct.TodolistBindJSONReceive:
    properties:
      deadline:
        example: "2077-01-01 01:01:01"
        type: string
      title:
        example: 标题
        type: string
      todo:
        example: 文本
        type: string
    type: object
  datastruct.TodolistBindMysqlDelete:
    properties:
      idlist:
        items:
          type: integer
        type: array
      isdone:
        example: true
        type: boolean
      method:
        example: 1
        type: integer
    type: object
  datastruct.TodolistBindMysqlModify:
    properties:
      idlist:
        items:
          type: integer
        type: array
      isdone:
        example: true
        type: boolean
      method:
        example: 1
        type: integer
    type: object
  datastruct.TodolistBindMysqlSearch:
    properties:
      isdone:
        example: true
        type: boolean
      keyword:
        example: OP
        type: string
      method:
        example: 1
        type: integer
    type: object
host: 127.0.0.1:8080
info:
  contact: {}
  title: test
  version: "1.0"
paths:
  /author/ping:
    get:
      description: token前面要添加Bearer
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: token测试api
      tags:
      - author
  /author/todolist/add:
    post:
      consumes:
      - application/json
      description: token前面要添加Bearer
      parameters:
      - description: 标题,内容,截止日期[yyyy-mm-dd hh:mm:ss]
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/datastruct.TodolistBindJSONReceive'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 添加备忘录api
      tags:
      - author
  /author/todolist/delete:
    delete:
      consumes:
      - application/json
      description: token前面要添加Bearer;method(允许叠加,使用或运算):1[isdone],2[idlist],4[all]
      parameters:
      - description: 是否完成,id数组,查找方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/datastruct.TodolistBindMysqlDelete'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除备忘录api
      tags:
      - author
  /author/todolist/modify:
    put:
      consumes:
      - application/json
      description: token前面要添加Bearer;method(允许叠加,使用或运算):1[isdone],2[idlist],4[all]
      parameters:
      - description: 是否完成,id数组,查找方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/datastruct.TodolistBindMysqlModify'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新备忘录api
      tags:
      - author
  /author/todolist/search:
    post:
      consumes:
      - application/json
      description: token前面要添加Bearer;method(允许叠加,使用或运算):1[isdone],2[keyword],4[all]
      parameters:
      - description: 是否完成,关键字,查找方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/datastruct.TodolistBindMysqlSearch'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 查找备忘录api
      tags:
      - author
  /login:
    post:
      parameters:
      - description: 用户名
        in: query
        name: username
        required: true
        type: string
      - description: 密码
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 登录api
  /register:
    post:
      parameters:
      - description: 用户名
        in: query
        name: username
        required: true
        type: string
      - description: 密码
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 注册api
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
